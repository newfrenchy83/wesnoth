#textdomain wesnoth-test

#####
# API(s) being tested: [plague]priority=
##
# Actions:
# This uses a "common keep" map, with Alice and Bob already adjacent to the other units.
# Give Alice a plague weapon special that creates Ants.
# Give Bob a high-priority plague weapon special that creates Blood Bats.
# Make Charlie teach a medium-priority plague ability that creates Chocobones.
# Make Dave teach a plague ability that creates Dragonguards.
# Create targets each around Alice and Bob.
# Have Alice and Bob kill 1 target each.
# Remove Charlie.
# Have Alice and Bob kill 1 target each.
# Remove Dave.
# Have Alice and Bob kill 1 target each.
##
# Expected end state:
# TODO: document after choosing which priorities to test.
#####
{COMMON_KEEP_A_B_C_D_UNIT_TEST plague_priority (
    [event]
        name=start

        [object]
            [filter]
                id=alice
            [/filter]
            [effect]
                apply_to=attack
                [set_specials]
                    mode=append
                    {WEAPON_SPECIAL_PLAGUE_TYPE ("Giant Ant")}
                [/set_specials]
            [/effect]
        [/object]

        [object]
            [filter]
                id=bob
            [/filter]
            [effect]
                apply_to=attack
                [set_specials]
                    mode=append
                    {WEAPON_SPECIAL_PLAGUE_TYPE (Blood Bat)}
                    [+plague]
                        overwrite_specials=one_side
                        [overwrite]
                            priority=3
                        [/overwrite]
                    [/plague]
                [/set_specials]
            [/effect]
        [/object]

        [object]
            [filter]
                id=charlie
            [/filter]
            [effect]
                apply_to=new_ability
                [abilities]
                    {WEAPON_SPECIAL_PLAGUE_TYPE Chocobone}
                    [+plague]
                        overwrite_specials=one_side
                        [overwrite]
                            priority=2
                        [/overwrite]
                        affect_self=yes
                        affect_allies=yes
                        affect_enemies=yes
                        [affect_adjacent]
                        [/affect_adjacent]
                    [/plague]
                [/abilities]
            [/effect]
        [/object]

        [object]
            [filter]
                id=dave
            [/filter]
            [effect]
                apply_to=new_ability
                [abilities]
                    {WEAPON_SPECIAL_PLAGUE_TYPE (Dwarvish Dragonguard)}
                    [+plague]
                        overwrite_specials=one_side
                        [overwrite]
                            priority=1
                        [/overwrite]
                        [filter_student]
                        [/filter_student]
                        affect_self=yes
                        affect_allies=yes
                        affect_enemies=yes
                        [affect_adjacent]
                        [/affect_adjacent]
                    [/plague]
                    [chance_to_hit]
                        value=100
                        affect_self=yes
                    [/chance_to_hit]
                [/abilities]
            [/effect]
        [/object]

        # Create some targets
        [for]
            start=1
            end=3
            [do]
                [unit]
                    location_id=1
                    id=target_for_alice_$i
                    type=Test Melee Quintain
                    side=2
                    hitpoints=1
                [/unit]
                [unit]
                    location_id=2
                    id=target_for_bob_$i
                    type=Test Melee Quintain
                    side=1
                    hitpoints=1
                [/unit]
            [/do]
        [/for]

        # With Charlie and Dave teaching plague
        # For Alice's attacks, the test is checking that Charlie's teaching takes priority over Dave's, and Dave's over Alice's weapon special.
        # For Bob's attacks, the test is checking that neither teaching takes priority over Bob's weapon special.
        [test_do_attack_by_id]
            attacker=alice
            defender=target_for_alice_1
            weapon=0
            resupply_attacks_left=1
        [/test_do_attack_by_id]
        [test_do_attack_by_id]
            attacker=bob
            defender=target_for_bob_1
            weapon=0
            resupply_attacks_left=1
        [/test_do_attack_by_id]

        {ASSERT (
            [have_unit]
                type=Blood Bat
                count=1
            [/have_unit]
        )}
        {ASSERT (
            [have_unit]
                type=Chocobone
                count=1
            [/have_unit]
        )}

        # Without Charlie
        [store_unit]
            [filter]
                id=charlie
            [/filter]
            variable=stored_charlie
            kill=yes
        [/store_unit]
        [test_do_attack_by_id]
            attacker=alice
            defender=target_for_alice_2
            weapon=0
            resupply_attacks_left=1
        [/test_do_attack_by_id]
        [test_do_attack_by_id]
            attacker=bob
            defender=target_for_bob_2
            weapon=0
            resupply_attacks_left=1
        [/test_do_attack_by_id]

        {ASSERT (
            [have_unit]
                type=Blood Bat
                count=2
            [/have_unit]
        )}
        {ASSERT (
            [have_unit]
                type=Chocobone
                count=1
            [/have_unit]
        )}
        {ASSERT (
            [have_unit]
                type=Dwarvish Dragonguard
                count=1
            [/have_unit]
        )}

        # With neither Charlie nor Dave
        [store_unit]
            [filter]
                id=dave
            [/filter]
            variable=stored_dave
            kill=yes
        [/store_unit]
        [test_do_attack_by_id]
            attacker=alice
            defender=target_for_alice_3
            weapon=0
            resupply_attacks_left=1
        [/test_do_attack_by_id]
        [test_do_attack_by_id]
            attacker=bob
            defender=target_for_bob_3
            weapon=0
            resupply_attacks_left=1
        [/test_do_attack_by_id]

        # TODO: Test exactly which one spawned when. Can't use the ids, because zombies don't have the same ids as the unit they spawned from.
        {ASSERT (
            [have_unit]
                # id=target_for_alice_3
                type=Giant Ant
                count=1
            [/have_unit]
        )}
        {ASSERT (
            [have_unit]
                type=Blood Bat
                count=3
            [/have_unit]
        )}
        {ASSERT (
            [have_unit]
                # id=target_for_alice_1
                type=Chocobone
                count=1
            [/have_unit]
        )}
        {ASSERT (
            [have_unit]
                # id=target_for_alice_2
                type=Dwarvish Dragonguard
                count=1
            [/have_unit]
        )}

        {SUCCEED}
    [/event]
)}
